name: Build

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# env:
#     SERVICE_NAME: weatherforecasttest

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
        run:
            working-directory: ./src
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v3.0.0
      with:
        versionSpec: '6.x'

    - name: Determine Version
      uses: gittools/actions/gitversion/execute@v3.0.0
      with:
        useConfigFile: true
        updateAssemblyInfo: true
        configFilePath: build/GitVersion.yml

    - name: get repository name in lowercase
      run: |
        REPO_LC=${GITHUB_REPOSITORY#davidwallis/}
        echo "REPOSITORY_NAME=${REPO_LC,,}" >> "${GITHUB_ENV}"

    - name: debug step
      run: echo "$GITHUB_CONTEXT"

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal

    - name: Build the Docker image
      run: docker build . --build-arg BUILD_VERSION=${{ env.GitVersion_FullSemVer }} --file WeatherForecastTest/Dockerfile --tag ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.REPOSITORY_NAME }}:latest

    - name: Log into Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Push the image to Docker Hub
      if: github.ref == 'refs/heads/main'
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.REPOSITORY_NAME }}

    - name: helm package chart
      run: |
        helm package ../charts/${{ env.REPOSITORY_NAME }} --app-version=${{ env.GitVersion_FullSemVer }} --version=${{ env.GitVersion_FullSemVer }} -d ../artifacts

    - name: helm push chart
      if: github.ref == 'refs/heads/main'
      # OCI artifacts on Docker Hub
      # see: https://docs.docker.com/docker-hub/oci-artifacts/
      run: |
          helm registry login registry-1.docker.io -u "${{ secrets.DOCKERHUB_USERNAME }}" -p "${{ secrets.DOCKERHUB_TOKEN }}"
          helm push ../artifacts/${{ env.REPOSITORY_NAME }}-${{ env.GitVersion_FullSemVer }}.tgz oci://registry-1.docker.io/${{ secrets.DOCKERHUB_USERNAME }}