name: Build

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
    SERVICE_NAME: weatherforecasttest
    
jobs:
  build:
  

    runs-on: ubuntu-latest
    defaults:
        run:
            working-directory: ./src
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal

    - name: Build the Docker image
      run: pwd && ls && docker build . -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.SERVICE_NAME }}:latest -f WeatherForecastTest/Dockerfile


    # - name: get repository name
      # run: echo "REPOSITORY_NAME=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV

    - name: Generate App Version
      run: |
        # echo APP_VERSION=`git describe --tags --always` >> $GITHUB_ENV
        echo APP_VERSION=1.1.1

    # - name: helm package chart
      # run: |
        # helm package ../charts/${{ env.SERVICE_NAME }} --app-version=${{ env.APP_VERSION }} --version=${{ env.APP_VERSION }} -d ../artifacts



          
  release:
    runs-on: ubuntu-latest
    needs: build
    defaults:
        run:
            working-directory: ./src
    if: github.ref == 'refs/heads/main'
    steps:
    
    - name: Log into Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Push the image to Docker Hub
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.SERVICE_NAME }}  
    
    - name: helm package chart
      run: |
        helm package ../charts/${{ env.SERVICE_NAME }} --app-version=${{ env.APP_VERSION }} --version=${{ env.APP_VERSION }} -d ../artifacts
   
    - name: helm push chart
      # OCI artifacts on Docker Hub 
      # see: https://docs.docker.com/docker-hub/oci-artifacts/
      run: |
          helm push ../artifacts/${{ env.SERVICE_NAME }}-${{ env.APP_VERSION }}.tgz oci://${{ secrets.DOCKERHUB_USERNAME }}/${{ env.SERVICE_NAME }}